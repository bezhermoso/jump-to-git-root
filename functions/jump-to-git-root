# vim set ft=zsh

## Jump to Git repo's root
# If already in root, check if in a sub-module. If so, jump to nearest parent repo.
# Authors:
#   Bez Hermoso (c) 2018
function jump-to-git-root {
  local _root_dir="$(git rev-parse --show-toplevel 2>/dev/null)"
  if [[ -z $_root_dir ]]; then
    >&2 echo 'Not a Git repo!'
    return 1
  fi
  local _pwd=$(pwd)
  if [[ $_pwd = $_root_dir ]]; then
    # Handle submodules:
    # If parent dir is also managed under Git then we are in a submodule.
    # If so, cd to nearest Git parent project.
    _root_dir=$(git -C $(dirname $_pwd) rev-parse --show-toplevel 2>/dev/null)
    if [[ -z $_root_dir ]]; then
      >&2 echo "Already at Git repo root, and no more Git repos beyond this point."
      return 0
    fi
    >&2 echo -n "Pierced through submodule. "
  fi
  # Make `cd -` work.
  OLDPWD=$_pwd
  echo "Git repo root: $_root_dir"
  cd $_root_dir
}
